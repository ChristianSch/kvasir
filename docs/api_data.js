define({ "api": [  {    "group": "Services",    "name": "CreateService",    "type": "POST",    "url": "/services",    "title": "",    "description": "<p>Registers a new service.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the microservice. Note: might have an appended version specifier prefixed with an <code>@</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "port",            "description": "<p>The port of the microservice.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "host",            "description": "<p>Host of the microservice. Note: if not given, the remote address of the request issuer is being used.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    name: sentimentAnalysis@0.1.4,\n    host: 172.167.155.21,\n    port: 18805\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "501": [          {            "group": "501",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Error message.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  },  {    "group": "Services",    "name": "DeleteService",    "type": "DELETE",    "url": "/services/:id",    "title": "",    "description": "<p>Delete a microservice instance identified by the id.</p>",    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  },  {    "group": "Services",    "name": "GetIndex",    "type": "GET",    "url": "/",    "title": "",    "description": "<p>Returns api index</p>",    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  },  {    "group": "Services",    "name": "GetServices",    "type": "GET",    "url": "/services",    "title": "",    "description": "<p>Get all services.</p>",    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  },  {    "group": "Services",    "name": "GetServicesByName",    "type": "GET",    "url": "/services/:name",    "title": "",    "description": "<p>Get all services by name. Has an optional version specifier that ought to be given as query parameter.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "version",            "description": "<p>Version the microservices should have.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  },  {    "group": "Services",    "name": "ServiceHeartbeat",    "type": "POST",    "url": "/services/:id",    "title": "",    "description": "<p>Heartbeat functionality that prevents purge of the given service.</p>",    "error": {      "fields": {        "404": [          {            "group": "404",            "optional": false,            "field": "message",            "description": "<p>Error description.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./index.js",    "groupTitle": "Services"  }] });
